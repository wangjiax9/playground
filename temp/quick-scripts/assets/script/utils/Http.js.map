{"version":3,"sources":["Http.ts"],"names":[],"mappings":";;;;;AACA,OAAO;AACP,IAAM,OAAO,GAAG,qDAAqD,CAAA;AACrE,qBAAqB;AACrB;;;;GAIG;AACH;IAQE;IACA,CAAC;IAPa,gBAAW,GAAzB;QACE,IAAI,IAAI,CAAC,QAAQ,YAAY,IAAI,KAAK,KAAK,EAAE;YAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAA;SAC3B;QACD,OAAO,IAAI,CAAC,QAAQ,CAAA;IACtB,CAAC;IAGD;;;OAGG;IACI,sBAAO,GAAd,UAAe,MAAW;QACxB,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAA;YACzC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAG,OAAO,GAAG,MAAM,CAAC,GAAK,CAAC,CAAA;YAClD,GAAG,CAAC,OAAO,GAAG,IAAI,CAAA;YAClB,GAAG,CAAC,gBAAgB,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAA;YACxD,GAAG,CAAC,kBAAkB,GAAG;gBACvB,IAAI,GAAG,CAAC,UAAU,KAAK,CAAC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBAC9C,IAAM,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;oBAC9C,OAAO,CAAC,IAAI,CAAC,CAAA;iBACd;YACH,CAAC,CAAA;YACD,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;YAC3D,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAChB,CAAC,CAAC,CAAA;IACJ,CAAC;IACH,WAAC;AAAD,CA9BA,AA8BC,IAAA;AAED,kBAAe,IAAI,CAAC,WAAW,EAAE,CAAA","file":"","sourceRoot":"../../../../../assets/script/utils","sourcesContent":["\n// mock\nconst baseUrl = 'https://easy-mock.com/mock/5c191e7313c0eb6355d2efec'\n// const baseUrl = ''\n/**\n * HTTP请求\n * 导出一个单例\n * 封装了get和post方法\n */\nclass Http {\n  private static instance: Http\n  public static getInstance () {\n    if (this.instance instanceof this === false) {\n      this.instance = new this()\n    }\n    return this.instance\n  }\n  private constructor () {\n  }\n  /**\n   * 发送请求\n   * @param config 配置\n   */\n  public request(config: any) {\n    return new Promise((resolve, reject) => {\n      const xhr = cc.loader.getXMLHttpRequest()\n      xhr.open(config.method, `${baseUrl}${config.url}`)\n      xhr.timeout = 5000\n      xhr.setRequestHeader('Content-type', 'application/json')\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          const json: any = JSON.parse(xhr.responseText)\n          resolve(json)\n        } \n      }\n      const data = config.data ? JSON.stringify(config.data) : ''\n      xhr.send(data)\n    })\n  }\n}\n\nexport default Http.getInstance()"]}