{"version":3,"sources":["../../../../../assets/script/cc/assets/script/cc/DialogRecycle.ts"],"names":[],"mappings":";;;;;AAAA,mCAA6B;AAC7B,sCAA4C;AAC5C,wCAAuC;AAEjC,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAkB;AAG3C;IAA0C,gCAAY;IAAtD;;IA2EA,CAAC;IAzEW,6BAAM,GAAhB;QAAA,iBAMC;QALC,qBAAa,EAAE,CAAC,IAAI,CAAC,UAAA,GAAG;YACtB,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA;QACzB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;YACV,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QACb,CAAC,CAAC,CAAA;IACJ,CAAC;IAED;;;OAGG;IACK,oCAAa,GAArB,UAAsB,GAAQ;QAA9B,iBA0DC;QAzDC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAA,IAAI;YACnB,IAAM,QAAQ,GAAG,EAAE,CAAC,WAAW,CAAC,YAAE,CAAC,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAA;YACrE,IAAM,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,YAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;YACpE,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;YAC9B,QAAQ,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAA;YAE9B,IAAM,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAA;YAC/C,IAAM,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAA;YAC5C,IAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;YACzC,IAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAA;YAC7C,IAAM,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAA;YACtD,IAAM,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAA;YACtD,IAAM,SAAS,GAAG,EAAE,CAAC,IAAI,CAAC,0BAA0B,EAAE,QAAQ,CAAC,CAAA;YAC/D,IAAM,SAAS,GAAG,EAAE,CAAC,IAAI,CAAC,0BAA0B,EAAE,QAAQ,CAAC,CAAA;YAC/D,IAAI,UAAU,GAAmB,IAAI,CAAA;YACrC,IAAI,IAAI,CAAC,SAAS,KAAK,UAAU,EAAE;gBACjC,UAAU,GAAG,YAAE,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;aAC/C;iBAAM,IAAI,IAAI,CAAC,SAAS,KAAK,WAAW,EAAE;gBACzC,UAAU,GAAG,YAAE,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;aAC/C;iBAAM,IAAI,IAAI,CAAC,SAAS,KAAK,cAAc,EAAE;gBAC5C,UAAU,GAAG,YAAE,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;aAC/C;YACD,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,UAAU,CAAA;YAC1D,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,UAAU,CAAA;YAC1D,QAAQ;YACR,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,cAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;YAC5D,OAAO;YACP,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAA;YACrD,OAAO;YACP,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAA;YACvD,SAAS;YACT,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAA;YACrD,UAAU;YACV,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;YAEnE,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBACpB,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,YAAE,CAAC,UAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAA;aACjF;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;gBACnB,SAAS;gBACT,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;oBACpC,IAAI,IAAI,CAAC,MAAM;wBAAE,OAAM;oBACvB,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;gBAC1C,CAAC,EAAE,KAAI,CAAC,CAAA;gBACR,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;oBAClC,IAAI,IAAI,CAAC,MAAM;wBAAE,OAAM;oBACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;oBAClB,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBACpC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,YAAE,CAAC,UAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAA;oBAChF,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,cAAO,CAAC,EAAE,KAAI,CAAC,CAAA;oBACtD,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,cAAO,CAAC,EAAE,KAAI,CAAC,CAAA;oBACpD,YAAE,CAAC,YAAY,GAAG,IAAI,CAAA;oBACtB,YAAE,CAAC,gBAAgB,GAAG,QAAQ,CAAA;oBAC9B,YAAE,CAAC,MAAM,CAAC,YAAY,EAAE,CAAA;gBAC1B,CAAC,EAAE,KAAI,CAAC,CAAA;aACT;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;IAxEkB,YAAY;QADhC,OAAO;OACa,YAAY,CA2EhC;IAAD,mBAAC;CA3ED,AA2EC,CA3EyC,EAAE,CAAC,SAAS,GA2ErD;kBA3EoB,YAAY","file":"","sourceRoot":"../../../../../assets/script/cc","sourcesContent":["import GM from '../global/GM'\nimport { fetchPrayList } from '../api/Index'\nimport { gameCn } from '../utils/Const'\n\nconst { ccclass, property } = cc._decorator\n\n@ccclass\nexport default class DialogSource extends cc.Component {\n\n  protected onLoad () {\n    fetchPrayList().then(res => {\n      this.buildPrayList(res)\n    }).catch(err => {\n      cc.log(err)\n    })\n  }\n  \n  /**\n   * 构建祈祷列表\n   * @param res \n   */\n  private buildPrayList(res: any) {\n    res.data.forEach(item => {\n      const itemNode = cc.instantiate(GM.resManager.prefab['recycle-item'])\n      const contentNode = cc.find('view/content', GM.dialog.dialogRecycle)\n      contentNode.addChild(itemNode)\n      itemNode.setPosition(74, -100)\n\n      const gameName = cc.find('game-name', itemNode)\n      const content = cc.find('content', itemNode)\n      const btn = cc.find('pray-btn', itemNode)\n      const bar = cc.find('progress/bar', itemNode)\n      const count = cc.find('progress-desc/count', itemNode)\n      const total = cc.find('progress-desc/total', itemNode)\n      const powerIco1 = cc.find('progress-desc/power1-ico', itemNode)\n      const powerIco2 = cc.find('progress-desc/power2-ico', itemNode)\n      let powerIcoSf: cc.SpriteFrame = null \n      if (item.powerType === 'strength') {\n        powerIcoSf = GM.resManager.texture['power-st']\n      } else if (item.powerType === 'dexterity') {\n        powerIcoSf = GM.resManager.texture['power-dx']\n      } else if (item.powerType === 'intelligence') {\n        powerIcoSf = GM.resManager.texture['power-it']\n      }\n      powerIco1.getComponent(cc.Sprite).spriteFrame = powerIcoSf\n      powerIco2.getComponent(cc.Sprite).spriteFrame = powerIcoSf\n      // 设置游戏名\n      gameName.getComponent(cc.Label).string = gameCn(item.gameId)\n      // 祈祷内容\n      content.getComponent(cc.Label).string = item.prayDesc\n      // 当前神力\n      count.getComponent(cc.Label).string = item.currentPower\n      // 总共需要神力\n      total.getComponent(cc.Label).string = item.totalPower\n      // 设置进度条进度\n      bar.width = Math.round((item.currentPower * 500 / item.totalPower))\n\n      if (item.state === 1) {\n        btn.getComponent(cc.Sprite).spriteFrame = GM.resManager.texture['pray-btn-gone']\n      } else {\n        item.isPray = false\n        // 获取按钮事件\n        btn.on(cc.Node.EventType.TOUCH_START, () => {\n          if (item.isPray) return\n          btn.runAction(cc.scaleTo(0.2, 0.9, 0.9))\n        }, this)\n        btn.on(cc.Node.EventType.TOUCH_END, () => {\n          if (item.isPray) return\n          item.isPray = true\n          btn.runAction(cc.scaleTo(0.2, 1, 1))\n          btn.getComponent(cc.Sprite).spriteFrame = GM.resManager.texture['pray-btn-gone']\n          btn.off(cc.Node.EventType.TOUCH_START, () => {}, this)\n          btn.off(cc.Node.EventType.TOUCH_END, () => {}, this)\n          GM.joinPrayItem = item\n          GM.joinPrayItemNode = itemNode\n          GM.dialog.showJoinPray()\n        }, this)\n      }\n    })\n  }\n\n  \n}"]}