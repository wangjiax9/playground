{"version":3,"sources":["../../../../../assets/script/cc/assets/script/cc/LoginDialog.ts"],"names":[],"mappings":";;;;;AAAA,mCAA6B;AAC7B,sCAA8C;AAC9C,wCAAwC;AAElC,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAkB;AAG3C;IAAyC,+BAAY;IADrD;QAAA,qEAyHC;QAtHC;;WAEG;QAEK,WAAK,GAAY,IAAI,CAAA;QAC7B;;WAEG;QAEK,iBAAW,GAAY,IAAI,CAAA;QACnC;;WAEG;QAEK,sBAAgB,GAAY,IAAI,CAAA;QACxC;;WAEG;QAEK,kBAAY,GAAY,IAAI,CAAA;QACpC;;WAEG;QAEK,kBAAY,GAAY,IAAI,CAAA;QACpC;;WAEG;QAEK,cAAQ,GAAY,IAAI,CAAA;QAExB,eAAS,GAAU,EAAE,CAAA;QACrB,SAAG,GAAW,EAAE,CAAA;QAChB,aAAO,GAAW,EAAE,CAAA;;IAqF9B,CAAC;IApFW,4BAAM,GAAhB;QAAA,iBAyCC;QAxCC,+DAA+D;QAC/D,mCAAmC;QACnC,oCAAoC;QACpC,YAAE,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAA;QACxC,YAAE,CAAC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAA;QAClD,IAAI,CAAC,gBAAgB,EAAE,CAAA;QAEvB,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;QAC1D,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE;YAC5B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,MAAM,CAAA;YAClE,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,MAAM,CAAA;YAC5D,IAAM,MAAM,GAAG;gBACb,SAAS,EAAE,KAAI,CAAC,SAAS;gBACzB,GAAG,EAAE,KAAI,CAAC,GAAG;aACd,CAAA;YACD,KAAK;YACL,aAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG;gBACpB,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;gBACxB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;oBACrB,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CAAA;oBACvB,YAAE,CAAC,MAAM,CAAC,SAAS,EAAE,CAAA;oBACrB,KAAI,CAAC,QAAQ,CAAC;wBACZ,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAA;wBACzB,YAAE,CAAC,MAAM,CAAC,cAAc,EAAE,CAAA;oBAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;iBACZ;qBAAM;oBACL,YAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;oBACf,KAAI,CAAC,QAAQ,CAAC;wBACZ,YAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;oBACxB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;iBACZ;YACH,CAAC,CAAC,CAAA;YACF,4CAA4C;YAC5C,0BAA0B;YAC1B,0BAA0B;YACtB,4BAA4B;YAChC,iCAAiC;YACjC,gBAAgB;YAChB,IAAI;QACN,CAAC,EAAE,IAAI,CAAC,CAAA;IACV,CAAC;IACS,+BAAS,GAAnB;QACE,IAAM,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;QAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;IACzB,CAAC;IACD;;OAEG;IACK,sCAAgB,GAAxB;QAAA,iBAkBC;QAjBC,eAAe;QACf,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YACrD,IAAM,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,2BAA2B,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAA;YAC9E,IAAM,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,2BAA2B,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAA;YAC9E,IAAM,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,2BAA2B,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAA;YAC9E,IAAM,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,2BAA2B,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAA;YAC9E,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA;YACrC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA;YACrC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA;YACrC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA;QACvC,CAAC,EAAE,IAAI,CAAC,CAAA;QAER,IAAM,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAA;QACrD,OAAO;QACP,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;YACtC,KAAI,CAAC,UAAU,EAAE,CAAA;QACnB,CAAC,EAAE,IAAI,CAAC,CAAA;IACV,CAAC;IAEO,gCAAU,GAAlB;QAAA,iBAaC;QAZC,IAAM,MAAM,GAAG;YACb,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,OAAO,EAAE,eAAO,CAAC,YAAE,CAAC,IAAI,CAAC,IAAI,CAAC;SAC/B,CAAA;QACD,gBAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG;YACvB,EAAE,CAAC,GAAG,CAAC,6BAAO,YAAE,CAAC,IAAI,CAAC,IAAM,CAAC,CAAA;YAC7B,YAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;YACf,KAAI,CAAC,QAAQ,CAAC;gBACZ,YAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;YACxB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACb,CAAC,CAAC,CAAA;IACJ,CAAC;IAhHD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACW;IAK7B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;oDACiB;IAKnC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;yDACsB;IAKxC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;qDACkB;IAKpC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;qDACkB;IAKpC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACc;IA/Bb,WAAW;QAD/B,OAAO;OACa,WAAW,CAwH/B;IAAD,kBAAC;CAxHD,AAwHC,CAxHwC,EAAE,CAAC,SAAS,GAwHpD;kBAxHoB,WAAW","file":"","sourceRoot":"../../../../../assets/script/cc","sourcesContent":["import GM from '../global/GM'\nimport { login, register } from '../api/Login'\nimport { godCamp } from '../utils/Const'\n\nconst { ccclass, property } = cc._decorator\n\n@ccclass\nexport default class LoginDialog extends cc.Component {\n\n  /**\n   * 标题框\n   */\n  @property(cc.Node)\n  private title: cc.Node = null\n  /**\n   * 登录框\n   */\n  @property(cc.Node)\n  private dialogLogin: cc.Node = null\n  /**\n   * 角色选择框\n   */\n  @property(cc.Node)\n  private dialogRoleSelect: cc.Node = null\n  /**\n   * 用户输入框\n   */\n  @property(cc.Node)\n  private usernameEdit: cc.Node = null\n  /**\n   * 密码输入框\n   */\n  @property(cc.Node)\n  private passwordEdit: cc.Node = null\n  /**\n   * 登录按钮\n   */\n  @property(cc.Node)\n  private loginBtn: cc.Node = null\n\n  private accountId: string =''\n  private pwd: string = ''\n  private godCamp: string = ''\n  protected onLoad () {\n    // GM.toastNode = cc.instantiate(GM.resManager.prefab['toast'])\n    // this.node.addChild(GM.toastNode)\n    // GM.toastNode.setPosition(2000, 0)\n    GM.dialog.dialogLogin = this.dialogLogin\n    GM.dialog.dialogRoleSelect = this.dialogRoleSelect\n    this.roleSelectHandle()\n\n    const btnComponent = this.loginBtn.getComponent(cc.Button)\n    btnComponent.node.on('click', () => {\n      this.accountId = this.usernameEdit.getComponent(cc.EditBox).string\n      this.pwd = this.passwordEdit.getComponent(cc.EditBox).string\n      const params = {\n        accountId: this.accountId,\n        pwd: this.pwd\n      }\n      // 登录\n      login(params).then(res => {\n        cc.log(res.data.godCamp)\n        if (!res.data.godCamp) {\n          cc.log('need register')\n          GM.dialog.hideLogin()\n          this.schedule(() => {\n            this.title.active = false\n            GM.dialog.showRoleSelect()\n          }, 0, 0, 1)\n        } else {\n          GM.setUser(res)\n          this.schedule(() => {\n            GM.switchScene('main')\n          }, 0, 0, 1)\n        }\n      })\n      // if (username !== '' && password !== '') {\n      //   GM.dialog.hideLogin()\n      //   this.schedule(() => {\n          // this.title.active = false\n      //     GM.dialog.showRoleSelect()\n      //   }, 0, 0, 1)\n      // }\n    }, this)\n  }\n  protected onDisable () {\n    const ac = cc.fadeOut(1.0)\n    this.node.runAction(ac)\n  }\n  /**\n   * 角色选择处理\n   */\n  private roleSelectHandle() {\n    // 滑动时恢复每个滑块的缩放\n    this.dialogRoleSelect.on(cc.Node.EventType.TOUCH_MOVE, () => {\n      const god1Border = cc.find('view/content/god01/border', this.dialogRoleSelect)\n      const god2Border = cc.find('view/content/god02/border', this.dialogRoleSelect)\n      const god3Border = cc.find('view/content/god03/border', this.dialogRoleSelect)\n      const god4Border = cc.find('view/content/god04/border', this.dialogRoleSelect)\n      god1Border.runAction(cc.fadeOut(0.2))\n      god2Border.runAction(cc.fadeOut(0.2))\n      god3Border.runAction(cc.fadeOut(0.2))\n      god4Border.runAction(cc.fadeOut(0.2))\n    }, this)\n\n    const roleBtn = cc.find('btn', this.dialogRoleSelect)\n    // 选择角色\n    roleBtn.on(cc.Node.EventType.TOUCH_END, () => {\n      this.toRegister()\n    }, this)\n  }\n\n  private toRegister() {\n    const params = {\n      accountId: this.accountId,\n      pwd: this.pwd,\n      godCamp: godCamp(GM.user.role)\n    }\n    register(params).then(res => {\n      cc.log(`选择角色${GM.user.role}`)\n      GM.setUser(res)\n      this.schedule(() => {\n        GM.switchScene('main')\n      }, 0, 0, 1)\n    })\n  }\n\n}"]}