{"version":3,"sources":["../../../../../assets/script/global/assets/script/global/GM.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/script/global","sourcesContent":["import ResManager from './ResManager';\nimport DialogManager from './DialogManager'\nimport { Prefab } from '../../../creator';\n/**\n * 游戏管理\n */\nclass GM {\n  private static instance: GM\n  public static getInstance () {\n    if (this.instance instanceof this === false) {\n      this.instance = new this()\n    }\n    return this.instance\n  }\n  private constructor () {\n    this.init()\n  }\n\n  /**\n   * 资源管理\n   */\n  public resManager: ResManager = null\n\n  /**\n   * 弹框管理\n   */\n  public dialog: DialogManager = null\n  /**\n   * 消息框节点\n   */\n  public toastNode: cc.Node = null\n  /**\n   * 是否登录\n   */\n  public isLogin: boolean = false\n  /**\n   * 用户信息\n   */\n  public user: any = {}\n  /**\n   * 用户节点\n   */\n  public userNode: cc.Node = null\n\n  /**\n   * 参与祈祷的活动\n   */\n  public joinPrayItem: any = {}\n  /**\n   * 参与祈祷的活动节点\n   */\n  public joinPrayItemNode: cc.Node = null\n  /**\n   * 初始化\n   */\n  public init () {\n    this.resManager = new ResManager()\n    this.dialog = new DialogManager()\n  }\n  /**\n   * 切换场景\n   * @param scene 场景名\n   */\n  public switchScene (scene) {\n    cc.director.loadScene(scene)\n  }\n  public setUser (res: any) {\n    this.user = res.data\n  }\n  public updateUserPower () {\n    const stPower = cc.find('power/st-num', this.userNode)\n    const dxPower = cc.find('power/dx-num', this.userNode)\n    const itPower = cc.find('power/it-num', this.userNode)\n    stPower.getComponent(cc.Label).string = this.user.powerStrength.toFixed(1)\n    dxPower.getComponent(cc.Label).string = this.user.powerDexterity.toFixed(1)\n    itPower.getComponent(cc.Label).string = this.user.powerIntelligence.toFixed(1)\n  }\n  /**\n   * toast消息框\n   * @param msg \n   */\n  public toast (msg: string) {\n    const msgNode = cc.find('msg', this.toastNode)\n    msgNode.getComponent(cc.Label).string = msg\n    const ac = cc.sequence(\n      cc.fadeIn(0),\n      cc.scaleTo(0, 0.1, 0.1),\n      cc.moveTo(0, cc.v2(0, 200)),\n      cc.scaleTo(0.5, 1, 1),\n      cc.delayTime(1.5),\n      cc.fadeOut(0.5),\n      cc.moveTo(0, cc.v2(800, 800))\n    )\n    ac.easing(cc.easeOut(3.0))\n    this.toastNode.runAction(ac)\n    cc.log(this.toastNode)\n  }\n}\n\nexport default GM.getInstance()"]}